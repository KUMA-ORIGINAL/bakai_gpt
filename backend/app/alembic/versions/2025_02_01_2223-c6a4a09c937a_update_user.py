"""update user

Revision ID: c6a4a09c937a
Revises: 05d7cdee2174
Create Date: 2025-02-01 22:23:06.361351

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c6a4a09c937a'
down_revision: Union[str, None] = '05d7cdee2174'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('full_name', sa.String(length=50), nullable=True))
    op.drop_constraint('uq_users_email', 'users', type_='unique')
    op.drop_constraint('uq_users_username', 'users', type_='unique')
    op.create_unique_constraint(op.f('uq_users_full_name'), 'users', ['full_name'])
    op.drop_column('users', 'email')
    op.drop_column('users', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_constraint(op.f('uq_users_full_name'), 'users', type_='unique')
    op.create_unique_constraint('uq_users_username', 'users', ['username'])
    op.create_unique_constraint('uq_users_email', 'users', ['email'])
    op.drop_column('users', 'full_name')
    # ### end Alembic commands ###
